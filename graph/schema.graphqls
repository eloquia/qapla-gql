# GraphQL schema example
#
# https://gqlgen.com/getting-started/

# # # # # # # # # # # # # # # # #
#               User
# # # # # # # # # # # # # # # # #

type User {
  id: ID!
  firstName: String!
  lastName: String!
}

type UserDetails {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  assignedProjects: [Project]
}

input NewUser {
  email: String!
  password: String!
}

input UpdateUser {
  id: String!
  firstName: String!
  lastName: String!
  goesBy: String!
  middleName: String!
  email: String!
  gender: String!
  ethnicity: String!
  position: String!
  institution: String!
  isActive: Boolean!
}

input NewPersonnel {
  firstName: String!
  lastName: String!
  goesBy: String
  middleName: String
  email: String!
  gender: String
  ethnicity: String
  position: String
  institution: String
}

# # # # # # # # # # # # # # # # #
#             Project
# # # # # # # # # # # # # # # # #

type Project {
  id: String!
  name: String!
  description: String
  personnel: [User!]!
  createdAt: Time
  updatedAt: Time
}

type ProjectDetails {
  id: String!
  name: String!
  description: String
  personnel: [User]
  slug: String!
}

type ProjectListItem {
  id: String!
  name: String!
  slug: String!
  personnel: [User]
}

input NewProject {
  name: String!
  description: String
}

input UpdateProject {
  id: String!
  name: String!
  description: String
}

# # # # # # # # # # # # # # # # #
#             Meeting
# # # # # # # # # # # # # # # # #

type Meeting {
  id: String!
  name: String!
  people: [User]
  projects: [Project]
  startTime: Time!
  durationMinutes: Int!
}

input NewMeeting {
  name: String!
  peopleIDs: [String]
  projectIDs: [String]
  startTime: Time!
  durationMinutes: Int!
}

# # # # # # # # # # # # # # # # #
#             Queries
# # # # # # # # # # # # # # # # #

type Mutation {
  # # #
  # # # User
  # # #
  createUser(email: String!, password: String!): User!
  createPersonnel(input: NewPersonnel!): UserDetails!
  updateUser(input: UpdateUser!): User!

  # # #
  # # # Project
  # # #
  createProject(input: NewProject!): Project!
  updateProject(input: UpdateProject!): Project!
  assignUserToProject(userId: String!, projectId: String!): User!

  # # #
  # # # Authentication
  # # #
  signIn(email: String!, password: String!): User!

  # # #
  # # # Meeting
  # # #
  createMeeting(input: NewMeeting!): Meeting!
}

type Query {
  # # #
  # # # User
  # # #
  users: [User]!
  userDetails: [UserDetails]
  getUserById(id: String!): User!

  # # #
  # # # Project
  # # #
  projectListItems: [ProjectListItem]!
  getProjectById(id: String!): Project!
  projectDetails(slug: String!): ProjectDetails!

  # # #
  # # # Meeting
  # # #
  getMeetingById(id: String!): Meeting!
  getMeetingByDate(date: Time!): [Meeting]
}

scalar Time
