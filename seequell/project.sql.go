// Code generated by sqlc. DO NOT EDIT.
// source: project.sql

package seequell

import (
	"context"
	"database/sql"
)

const assignUserToProject = `-- name: AssignUserToProject :one
INSERT INTO core_qapla.project_user 
  (project_id, user_id)
VALUES
  ($1, $2)
RETURNING user_id, project_id
`

type AssignUserToProjectParams struct {
	ProjectID int64 `json:"project_id"`
	UserID    int64 `json:"user_id"`
}

func (q *Queries) AssignUserToProject(ctx context.Context, arg AssignUserToProjectParams) (CoreQaplaProjectUser, error) {
	row := q.queryRow(ctx, q.assignUserToProjectStmt, assignUserToProject, arg.ProjectID, arg.UserID)
	var i CoreQaplaProjectUser
	err := row.Scan(&i.UserID, &i.ProjectID)
	return i, err
}

const createProject = `-- name: CreateProject :one
INSERT INTO core_qapla.projects
  (project_name, project_desc)
VALUES
  ($1, $2)
RETURNING project_id, project_name, project_desc, created_at, updated_at
`

type CreateProjectParams struct {
	ProjectName string         `json:"project_name"`
	ProjectDesc sql.NullString `json:"project_desc"`
}

func (q *Queries) CreateProject(ctx context.Context, arg CreateProjectParams) (CoreQaplaProject, error) {
	row := q.queryRow(ctx, q.createProjectStmt, createProject, arg.ProjectName, arg.ProjectDesc)
	var i CoreQaplaProject
	err := row.Scan(
		&i.ProjectID,
		&i.ProjectName,
		&i.ProjectDesc,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateProject = `-- name: UpdateProject :one
UPDATE core_qapla.projects
SET project_name = $2,
    project_desc = $3
WHERE project_id = $1
RETURNING project_id, project_name, project_desc, created_at, updated_at
`

type UpdateProjectParams struct {
	ProjectID   int64          `json:"project_id"`
	ProjectName string         `json:"project_name"`
	ProjectDesc sql.NullString `json:"project_desc"`
}

func (q *Queries) UpdateProject(ctx context.Context, arg UpdateProjectParams) (CoreQaplaProject, error) {
	row := q.queryRow(ctx, q.updateProjectStmt, updateProject, arg.ProjectID, arg.ProjectName, arg.ProjectDesc)
	var i CoreQaplaProject
	err := row.Scan(
		&i.ProjectID,
		&i.ProjectName,
		&i.ProjectDesc,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
